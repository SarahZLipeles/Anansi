@import 'vendor-prefixes.scss';
$nodeRadius: 13;
$baseRadius: 39;
$pulseStrokeWidth:7;
$pulseStrokeColor:purple;
$pi: 3.14159265359;
$nodeToBaseFactor: 3;
$nodeSelectedOffSet: 3;
$attackEdgeStroke: red;
$selectedStrokeWith: 3;

line {
	transition: stroke-dasharray 3s linear;
}

.sigma-node {
  transition: stroke-dashoffset 0.2s linear, fill 0.2s linear,r 0.2s linear;
}

.pulse {
	r: ($nodeRadius * 0.6);
}

.base-pulse {
  r: ($baseRadius * 0.8);
}

.attackEdgeF {
	stroke: $attackEdgeStroke;
	@include prefix(animation, 'attack 0.3s linear 1');
}

.attackEdgeB {
	stroke: $attackEdgeStroke;
	//-webkit-animation:attack 0.3s linear 1 reverse;
	@include prefix(animation, '0.3s linear 1 reverse');
}

@-webkit-keyframes attack {
	from {
		stroke-dasharray: 20, 1000;
		stroke-dashoffset: 10;
	}
	to {
		stroke-dasharray: 20, 1000;
		stroke-dashoffset: -100;
	}
}

@function getDashArrayLength($radius){
  @return $radius + ($radius * 0.60)
}
@function getDashArrayOffset($radius, $divisor, $dashArrayLength) {
  @return (((2 * $pi * $radius) / $divisor) - ($dashArrayLength * 0.51))

}

.selected-node {
    r: ($nodeRadius + $selectedStrokeWith);
    fill-opacity: 0;
    stroke: $pulseStrokeColor;
    stroke-width: ($selectedStrokeWith * 3);
	stroke-dasharray: getDashArrayLength($nodeRadius), getDashArrayOffset($nodeRadius, 5.5, getDashArrayLength($nodeRadius));
  	@include prefix(animation, 'node-spinner 50s linear infinite');

}

.selected-base-node {
	r: ($baseRadius + ($nodeSelectedOffSet * $nodeToBaseFactor));
	fill-opacity:0;
  	stroke:$pulseStrokeColor;
	stroke-width: ($selectedStrokeWith * 3);
	stroke-dasharray: getDashArrayLength($baseRadius), getDashArrayOffset($baseRadius, 5.5, getDashArrayLength($baseRadius));
	@include prefix(animation, 'base-spinner 50s linear infinite');


}

@-webkit-keyframes node-spinner{
  from{
	stroke-dashoffset: (getDashArrayOffset($nodeRadius, 5.5, getDashArrayLength($nodeRadius)) * 100);
	fill-opacity:0;
  }

  to {
	stroke-dashoffset: 0;
	fill-opacity:0;
  }
}

@-webkit-keyframes base-spinner{
  from{
	stroke-dashoffset: (getDashArrayOffset($baseRadius, 5.5, getDashArrayLength($baseRadius)) * 100);
	fill-opacity:0;
  }
  to {
	stroke-dashoffset: 0;
	fill-opacity:0;
  }
}

.circle[data-node-id]{
  @include prefix(transition, '0.1s linear');
}

.base-heal {
  stroke: $nodeRadius;
  @include prefix(animation, 'regenerate 2s linear 1');
}

@-webkit-keyframes regenerate{
  from{
	background: rgba(252,234,187,1);
	background: -moz-radial-gradient(center, ellipse cover, rgba(252,234,187,1) 0%, rgba(248,181,0,1) 50%, rgba(252,205,77,1) 51%, rgba(251,223,147,1) 100%);
	background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, rgba(252,234,187,1)), color-stop(50%, rgba(248,181,0,1)), color-stop(51%, rgba(252,205,77,1)), color-stop(100%, rgba(251,223,147,1)));
	background: -webkit-radial-gradient(center, ellipse cover, rgba(252,234,187,1) 0%, rgba(248,181,0,1) 50%, rgba(252,205,77,1) 51%, rgba(251,223,147,1) 100%);
	background: -o-radial-gradient(center, ellipse cover, rgba(252,234,187,1) 0%, rgba(248,181,0,1) 50%, rgba(252,205,77,1) 51%, rgba(251,223,147,1) 100%);
	background: -ms-radial-gradient(center, ellipse cover, rgba(252,234,187,1) 0%, rgba(248,181,0,1) 50%, rgba(252,205,77,1) 51%, rgba(251,223,147,1) 100%);
	background: radial-gradient(ellipse at center, rgba(252,234,187,1) 0%, rgba(248,181,0,1) 50%, rgba(252,205,77,1) 51%, rgba(251,223,147,1) 100%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fceabb', endColorstr='#fbdf93', GradientType=1 );
  }
  to {
	background: rgba(252,234,187,1);
	background: -moz-radial-gradient(center, ellipse cover, rgba(252,234,187,1) 0%, rgba(252,205,77,1) 51%, rgba(248,181,0,1) 82%, rgba(251,223,147,1) 100%);
	background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, rgba(252,234,187,1)), color-stop(51%, rgba(252,205,77,1)), color-stop(82%, rgba(248,181,0,1)), color-stop(100%, rgba(251,223,147,1)));
	background: -webkit-radial-gradient(center, ellipse cover, rgba(252,234,187,1) 0%, rgba(252,205,77,1) 51%, rgba(248,181,0,1) 82%, rgba(251,223,147,1) 100%);
	background: -o-radial-gradient(center, ellipse cover, rgba(252,234,187,1) 0%, rgba(252,205,77,1) 51%, rgba(248,181,0,1) 82%, rgba(251,223,147,1) 100%);
	background: -ms-radial-gradient(center, ellipse cover, rgba(252,234,187,1) 0%, rgba(252,205,77,1) 51%, rgba(248,181,0,1) 82%, rgba(251,223,147,1) 100%);
	background: radial-gradient(ellipse at center, rgba(252,234,187,1) 0%, rgba(252,205,77,1) 51%, rgba(248,181,0,1) 82%, rgba(251,223,147,1) 100%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fceabb', endColorstr='#fbdf93', GradientType=1 );
  }
}