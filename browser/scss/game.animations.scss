@import 'vendor-prefixes.scss';
$nodeRadius: 13;
//$pulseRadius: $nodeRadius-5;

line {
	transition: stroke-dasharray 3s linear;
}

.sigma-node {
  transition: stroke-dashoffset 0.2s linear, fill 0.2s linear,r 0.2s linear;
}

.pulse {
	r: ($nodeRadius - 5);
}

.attackEdgeF {
	stroke: red;
	-webkit-animation:attack 0.3s linear 1;
}

.attackEdgeB {
	stroke: red;
	-webkit-animation:attack 0.3s linear 1 reverse;
}

@-webkit-keyframes attack {
	from {
		stroke-dasharray: 20, 1000;
		stroke-dashoffset: 10;
	}
	to {
		stroke-dasharray: 20, 1000;
		stroke-dashoffset: -100;
	}
}


@function getDashArrayOffset($radius, $divisor, $dashArrayLength) {
  @return ((2*3.14159*$radius)/$divisor) - ($dashArrayLength*0.5)
}





//.selected-node {
//  r:$nodeRadius + 3;
//  fill-opacity:0;
//  stroke:purple;
//  stroke-width: 3;
//  stroke-dasharray: 3, getDashArrayOffset($nodeRadius, 5, $nodeRadius);
//  @include prefix(animation, 'spinner 50s linear infinite');
//}

.selected-node {
    r:$nodeRadius + 3;
    fill-opacity:0;
    stroke:purple;
    stroke-width: 7;
  	stroke-dasharray: (($nodeRadius / 5) * 3), getDashArrayOffset($nodeRadius, 5, (($nodeRadius / 5) * 3));
  -webkit-animation: spinner 50s linear infinite;
}
@-webkit-keyframes spinner{
  from{
	stroke-dashoffset: (getDashArrayOffset($nodeRadius, 5, $nodeRadius) * 100);
	fill-opacity:0;



  }

  to {
	stroke-dashoffset:0;
	fill-opacity:0;

  }
}


